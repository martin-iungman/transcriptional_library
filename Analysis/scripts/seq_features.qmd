---
title: "Promoter features"
author: "Martin Iungman"
---

Last update: `r Sys.Date()`

```{r}
#| code-summary: Settings
library(BSgenome.Hsapiens.UCSC.hg38)
library(rtracklayer)
library(tidyverse)
library(furrr)
library(patchwork)
library(ggnewscale)
theme_set(theme_bw())
clrs=ghibli::ghibli_palette(name="PonyoMedium")
clrs1=wesanderson::wes_palette(name="GrandBudapest1")
clrs2=wesanderson::wes_palette(name="GrandBudapest2")
```

```{r}
lib=rtracklayer::import.bed("Library_data/res/library.bed")
dna<-getSeq(Hsapiens,lib)
values(lib)=tibble(seq_id=lib$name)
seq_data=read_tsv("Library_data/res/seq_data.tsv")
prom_df=seq_data%>%filter(seq_id%in%lib$seq_id)
```

```{r}
library("biomaRt")
library("EnsDb.Hsapiens.v86")
ensembl = useMart("ensembl",dataset="hsapiens_gene_ensembl")
ids_df=getBM(attributes=c('ensembl_gene_id', 'hgnc_symbol', 'chromosome_name'), 
      filters = 'hgnc_symbol', 
      values = df$gene_sym, 
      mart = ensembl)
ids_df=ids_df %>% filter(chromosome_name%in%c(1:22,"X", "MT")) %>%unique()%>% group_by(hgnc_symbol) %>% filter(ensembl_gene_id==sample(ensembl_gene_id, 1)) %>% select(-chromosome_name)
prom_df=left_join(prom_df, ids_df, by=c("gene_sym"="hgnc_symbol"))
```

### Chromosome

```{r}
prom_df=lib %>% as_tibble() %>% select(seq_id, seqnames)%>%left_join(prom_df,.) %>% rename(chromosome=seqnames)
prom_df %>% ggplot(aes(chromosome))+geom_bar()
```

### G+C content

```{r}
G_C=Biostrings::oligonucleotideFrequency(dna,width=1, as.prob = T)[,c("C","G")]%>%rowSums()
lib$g_c=round(G_C,3)
prom_df<-elementMetadata(lib)%>%as_tibble()%>%dplyr::select(seq_id,g_c)%>%left_join(prom_df,.)
```

```{r}
p1=prom_df%>%ggplot(aes(g_c))+geom_density(fill=clrs[3])+xlab("[G+C]")
p2=prom_df%>%ggplot(aes(g_c, col=type))+geom_density()+scale_color_manual(values=clrs[c(2,4,6)])+xlab("G+C (%)")
p1+p2
```

### CpG

```{r}
CpG=Biostrings::oligonucleotideFrequency(dna,width=2)[,c("CG","GC")]
lib$CpG=round(rowSums(CpG)/width(lib),3)
prom_df<-elementMetadata(lib)%>%as_tibble()%>%select(seq_id,CpG)%>%left_join(prom_df,.)
```

```{r}
p1=prom_df%>%ggplot(aes(CpG))+geom_density(fill=clrs[3])
p2=prom_df%>%ggplot(aes(CpG, col=type))+geom_density()+scale_color_manual(values=clrs[c(2,4,6)])+xlab("CpG (%)")
p1+p2
```

### Observed vs Expected CpG

```{r}
prom_df=Biostrings::oligonucleotideFrequency(dna, width=1)[, c("C", "G")] %>% as_tibble() %>% mutate(exp_cpg=(C*G)/(width(dna)^2), seq_id=lib$name) %>% select(-c(C,G)) %>% left_join(prom_df, ., by="seq_id")

ggplot(prom_df, aes(CpG/exp_cpg))+geom_density()
```

### CpG Islands

Downloaded from UCSC

```{bash}
#| eval: false
#| code-summary: Download GCI
wget -qO- http://hgdownload.cse.ucsc.edu/goldenpath/hg38/database/cpgIslandExt.txt.gz    | gunzip -c    | awk 'BEGIN{ OFS="\t"; }{ print $2, $3, $4, $5$6, $7, $8, $9, $10, $11, $12 }'   > External_data/cpgIslandExt.hg38.bed

```

```{r}
cgi_df=read_tsv("External_data/cpgIslandExt.hg38.bed", col_names = c("seqname", "start","end", "cgi_name", "length", "cpgNum","gcNum","perCpG", "perGC", "obsExp")) 
cgi_lib=GRanges(cgi_df)
print(paste("There are",sum(countOverlaps( cgi_lib, lib)>1),"CGI that overlap more than one promoter"))
cgi_lib=plyranges::join_overlap_left(cgi_lib,lib)
cgi_lib_inner=plyranges::join_overlap_intersect(lib,cgi_lib)
cgi_lib_inner$width_cgi_overlap=width(cgi_lib_inner)
prom_df=prom_df %>% left_join(as_tibble(cgi_lib_inner) %>% select(seq_id, width_cgi_overlap)) %>% mutate(width_cgi_overlap=replace_na(width_cgi_overlap,0)) %>% group_by(seq_id) %>% mutate(width_cgi_overlap=sum(width_cgi_overlap)) %>% unique() %>% mutate(CGI=width_cgi_overlap>100)
```

```{r}
ggplot()+geom_density(data=as_tibble(cgi_lib), aes(length, col="All CGI"))+geom_density(data=as_tibble(cgi_lib_inner), mapping=aes(x=length, col="Library overlapping CGI"))+scale_x_log10()+xlab("CGI length (min 200pb)")+labs(legend="")+scale_color_manual(values = c("All CGI"=clrs[2], "Library overlapping CGI"=clrs[3]))
```

```{r}
ggplot(prom_df)+geom_density(aes(width_cgi_overlap), fill=clrs[3])+xlab("CGI-promoter overlap (pb)")
```

### EPD features

Just for EPD promoters: TATA-box, INR and CCAAT

Download [EPD](https://epd.epfl.ch/EPDnew_select.php) subsets and find which promoter names are in the library.

![](../../Images/paste-4B130259.png){width="352"}

![](../../Images/paste-9CDB619F.png){width="332"}

```{r}
tata_epd=import.bed("External_data/human38_epd_TATA.bed")
prom_df=prom_df%>%
  mutate(TATA_EPD=ifelse(type=="promoter",ifelse(name%in%tata_epd$name, T,F),NA))

inr_epd=import.bed("External_data/human38_epd_INR.bed")
prom_df=prom_df%>%mutate(INR_EPD=ifelse(type=="promoter",ifelse(name%in%inr_epd$name, T,F),NA))

ccaat_epd=import.bed("External_data/human38_epd_CCAAT.bed")
prom_df=prom_df%>%mutate(CCAAT_EPD=ifelse(type=="promoter",ifelse(name%in%ccaat_epd$name, T,F),NA))

gc_epd=rtracklayer::import.bed("External_data/human38_epd_GCbox.bed")
prom_df=prom_df%>%mutate(GCbox_EPD=ifelse(type=="promoter",ifelse(name%in%gc_epd$name, T,F),NA))

```

### TSS motif

```{r}
tss_seq=lib%>% subset(width==252)%>% getSeq(Hsapiens,.) %>% as.character() %>% str_extract(".{18}$") %>% str_extract("^.{5}")
tss_df=tibble(seq_id=(lib%>% subset(width==252))$name, 
              seq=tss_seq, 
              INR_strong_TSS=str_detect(seq, "(T|C)CA(G|C)(T|A)"), 
              TCT_TSS=str_detect(seq, ".(T|C)(C|G)(T|C)(C|T)"), 
              CA_TSS=str_detect(seq, ".CA.."), 
              CG_TSS=str_detect(seq, ".CG.."), 
              TA_TSS=str_detect(seq, ".TA.."), 
              TG_TSS=str_detect(seq, ".TG.."),
              #GC_TSS=str_detect(seq, ".GC.."),
              PyPu_TSS=str_detect(seq, ".(C|T)(A|G).."),
              other_TSS=INR_strong_TSS+TCT_TSS+CA_TSS+CG_TSS+TA_TSS+TG_TSS+INR_weak_TSS==0)

tss_df %>% mutate(dinucleotide=str_sub(seq, start=2,end = 3)) %>% ggplot(aes(dinucleotide %>% fct_infreq()))+geom_bar()+xlab("TSS dinucleotide")
prom_df %>% left_join(tss_df) %>% pivot_longer(ends_with("TSS"), names_to = "motif", values_to = "presence") %>% mutate(motif=str_remove(motif, "_TSS"))%>% ggplot(aes(motif, fill=presence))+geom_bar()
prom_df %>% left_join(tss_df) %>% pivot_longer(ends_with("TSS"), names_to = "motif", values_to = "presence") %>% ggplot(aes(fill=presence, x=CGI))+geom_bar(position = "fill")+facet_wrap(~motif)
prom_df %>% left_join(tss_df) %>% pivot_longer(ends_with("TSS"), names_to = "motif", values_to = "presence") %>% ggplot(aes(fill=presence, x=prom_index_g))+geom_bar(position = "fill")+facet_wrap(~motif)
```

### PhyloP score

```{bash}
eval: false
multiBigwigSummary BED-file -b External_data/hg38.phyloP100way.bw -o hg38.phyloP100way_summary_lib.npz --BED Labo/splicing_noise/Library_data/res/library.bed --outRawCounts ~/Documents/Labo/splicing_noise/External_data/hg38.phyloP100way_summary_lib.bed

multiBigwigSummary BED-file -b External_data/hg38.phyloP100way.bw -o hg38.phyloP100way_summary_lib_1bp.npz --BED Labo/splicing_noise/Library_data/res/1bp_library.bed --outRawCounts ~/Documents/Labo/splicing_noise/External_data/hg38.phyloP100way_summary_lib_1bp.bed
```

```{r}
phylo100=import.bed("External_data/hg38.phyloP100way_summary_lib.bed")%>%sort()
lib=sort(lib)
lib$phylo100=as.numeric(phylo100$name)%>%round(4)
df=tibble(seq_id=lib$seq_id, phylo100=lib$phylo100, phylo17=lib$phylo17, phastcons100=lib$phastcons100)%>%left_join(df,., by="seq_id")

range_sum_phylo=phylo1pb_prom_df %>% mutate(range=ifelse((relpos-16)<=50, "close", ifelse((relpos-16)<=150, "intermediate", "far"))) %>% group_by(name, range) %>% summarise(mean_range_phylo100=mean(score, na.rm=T))
df=range_sum_phylo %>% pivot_wider(values_from = mean_range_phylo100, names_from = range, names_prefix = "phylop100_") %>% left_join(df,., by=c("seq_id"="name"))

df%>%ggplot(aes(phylo100, col=type))+geom_density()
```

```{r}
phylo1pb=rtracklayer::import.bed("Tables/phyloP/hg38.phyloP100way_summary_lib_1bp.bed")
phylo1pb$score=phylo1pb$name
phylo1pb$name=NULL
phylo1pb=plyranges::join_overlap_inner(phylo1pb, lib)
phylo1pb$score=phylo1pb$score.x
phylo1pb$score.y=NULL
phylo1pb$score.x=NULL
phylo1pb_prom=subset(phylo1pb, str_detect(name, "^FP.{6}_"))
lib_df=as_tibble(lib)
names(lib_df)=paste0(names(lib_df), "_seq")
values(phylo1pb_prom)=left_join(as_tibble(values(phylo1pb_prom)), lib_df, by=c("name"="name_seq"))
strand(phylo1pb_prom)=phylo1pb_prom$strand_seq
phylo1pb_prom$seq=getSeq(Hsapiens,phylo1pb_prom)
phylo1pb_prom_df=unique(as_tibble(phylo1pb_prom)) %>% mutate(relpos=ifelse(strand_seq=="-", abs(start_seq-start), abs(start-end_seq)), score=as.numeric(score))
ordered_names_phylo=phylo1pb_prom_df%>% group_by(name) %>% summarise(med_score=median(score)) %>% arrange(med_score)
phylo1pb_prom_df %>% write_tsv("Tables/phylo100_1pb_lib.tsv")
```

```{r}
ggplot(phylo1pb_prom_df, aes(relpos-16,factor(name, levels = ordered_names_phylo$name), fill=score))+geom_tile()+
  scale_fill_gradient2(low =ghibli::ghibli_palette("PonyoMedium",7)[3], mid = "white", high=ghibli::ghibli_palette("PonyoMedium",7)[4] )+
  theme(axis.text.y = element_blank())+xlab("Relative position to TSS")+ylab("Promoters")+labs(legend="PhyloP score")

```

```{r}
phylo1pb_prom_df %>% group_by(relpos) %>% summarise(med_score=median(score, na.rm=T)) %>% ggplot(aes(relpos-16,med_score))+geom_line(linewidth=0.2)+xlab("Relative position to TSS")+ylab("Median PhyloP score")
```

```{r}
phylo1pb_prom_df %>%  filter(seq!="N")%>% group_by(relpos, seq) %>% summarise(med_score=median(score, na.rm=T)) %>% ggplot(aes(relpos-16,med_score, col=seq))+geom_line(linewidth=0.2)+xlab("Relative position to TSS")+ylab("Median PhyloP score")
```

### Human-Mouse turnover functional conservation (Young 2015)

```{r}

epd_hg19=import.bed("External_data/EPD/EPD_hg19.bed")
young=read_tsv("External_data/Sup1_mouse_human_Young2015.txt", skip=2, col_names = c("seqnames", "start", "end", "human_pos", "mouse_pos", "turnover"))
young$strand=str_extract(young$human_pos, ".$")
hg19_young_lib=epd_hg19 %>% subset(name%in%prom_df$name) %>% plyranges::join_overlap_left_directed(GRanges(young))
na_proms=subset(hg19_young_lib, is.na(turnover))
extra_proms=epd_hg19 %>% subset(name%in%na_proms$name ) %>% promoters(upstream = 235, downstream = 16)%>% plyranges::join_overlap_left_directed(GRanges(young)) %>% subset(!is.na(turnover)) %>% values() %>% as_tibble() %>% select(-human_pos, -mouse_pos) %>% unique() %>%add_count(name) %>% filter(n==1) %>% select(-n, -score)
values(hg19_young_lib) %>% as_tibble() %>% filter(!is.na(turnover)) %>% select(-human_pos, -mouse_pos, -score) %>% bind_rows(extra_proms)->turnover_df

prom_df=prom_df %>% left_join(turnover_df)

ggplot(prom_df, aes(turnover))+geom_histogram(stat="count")
```

```{r}
phylo1pb_prom_df %>% left_join(prom_df, by=c("name"="seq_id"))%>% group_by(relpos, turnover) %>% summarise(med_score=median(score, na.rm=T)) %>% ggplot(aes(relpos-15,med_score, col=turnover))+geom_line(linewidth=0.2)+xlab("Relative position to TSS")+ylab("Median PhyloP score")+geom_smooth()
```

### Cis Regulatory Modules (CRM) (from ChIP-seq)

```{r}
crm=read_tsv("Tables/library_remap_CRM.bed", col_names = c("seqnames", "start", "end", "seq_id", "score", "strand", "seqnames_peak", "start_peak",  "end_peak", "peak", "N_TF_CRM", "strand_peak", "thickstart_peak", "thickend_peak", "rgb")) prom_df %>% filter(type=="promoter")%>% left_join(crm) %>% mutate(`No peak`=is.na(seqnames_peak)) %>% count(`No peak`)

crm %>% ggplot(aes(N_TF_CRM)) +geom_density()+xlab("Number of non-redundant TF peaks")

prom_df=prom_df %>% left_join(crm %>% select(seq_id, N_TF_CRM), by="seq_id") %>% mutate(N_TF_CRM=replace_na(N_TF_CRM,0))
```

### Repeated Elements

```{r}
repeatmasker=read_delim("External_data/repeatMasker_hg38.txt", col_names = T,  delim = " ") %>% select(-strand)
repeatmasker_gr=GRanges(repeatmasker) %>% plyranges::join_overlap_intersect(lib, .) %>% subset(width>10)

dna_repeat<-getSeq(Hsapiens,repeatmasker_gr)
G_C_repeat=Biostrings::oligonucleotideFrequency(dna_repeat,width=1, as.prob = T)[,c("C","G")]%>%rowSums()
repeatmasker_gr$G_C_repeat=round(G_C_repeat,3)
repeatmasker_df=repeatmasker_gr %>% as_tibble() %>% mutate(repeat_family=ifelse(repeat_class%in%c("Low_complexity", "Simple_repeat"), "LCR", "TE"), repeat_superclass=str_remove(repeat_class, "/.+$")) %>% dplyr::rename(repeat_overlap=width)

repeatmasker %>% mutate(lib=ifelse(ID%in%repeatmasker_gr$ID, "Library", "Genome"), repeat_class=fct_infreq(repeat_class)%>% fct_lump_prop(prop =0.01)) %>% 
  ggplot(aes(repeat_class, ..prop.., group=lib, fill=lib)) + 
  geom_bar(position = "dodge")+theme(text=element_text(size=15), axis.text.x = element_text(angle=90))+labs(fill="")+xlab("Element class")+scale_fill_manual(values=clrs1[1:2])+ylab("Proportion")
repeatmasker_df %>% ggplot(aes(fct_infreq(repeat_superclass)%>% fct_lump_prop(prop =0.01), fill=repeat_family)) + geom_bar()+xlab("Element superclass")

repeatmasker %>% mutate(repeat_family=ifelse(repeat_class%in%c("Low_complexity", "Simple_repeat"), "LCR", "TE"), repeat_superclass=str_remove(repeat_class, "/.+$"))%>% mutate(lib=ifelse(ID%in%repeatmasker_gr$ID, "Promoters", "Genome"), repeat_superclass=fct_infreq(repeat_superclass)%>% fct_lump_prop(prop =0.01)) %>% 
    ggplot(aes(repeat_superclass, ..prop.., group=lib, fill=lib)) + 
    geom_bar(position = "dodge")+theme(text=element_text(size=15), axis.text.x = element_text(angle=90))+labs(fill="")+xlab("")+scale_fill_manual(values=clrs1[1:2])+ylab("Proportion")
```

```{r}
LCR_df<-dplyr::filter(repeatmasker_df, repeat_family=="LCR") %>% select(seq_id,repeat_overlap,G_C_repeat, repeat_family) %>% group_by(seq_id)%>% summarise(LCR_overlap=sum(repeat_overlap), G_C_LCR=sum(G_C_repeat*repeat_overlap)/LCR_overlap)
TE_df<-dplyr::filter(repeatmasker_df, repeat_family=="TE") %>% select(seq_id,repeat_overlap,G_C_repeat, repeat_family, repeat_superclass) %>% group_by(seq_id)%>% summarise(TE_overlap=sum(repeat_overlap), G_C_TE=sum(G_C_repeat*repeat_overlap)/TE_overlap, TE_superclass=unique(repeat_superclass)[[1]]) 
prom_df=prom_df %>% left_join(LCR_df) %>% left_join(TE_df)%>% mutate(across(c(LCR_overlap,TE_overlap,G_C_TE,G_C_LCR),function(x)replace_na(x, 0)), TE_superclass=TE_superclass %>% fct_lump_min(100))
```
